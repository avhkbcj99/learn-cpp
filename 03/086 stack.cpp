/** 
 * Created by author on 2023/5/11 14:48
*/
#include "iostream"

using namespace std;

/*
 *
 * C++中的栈区（stack）是由操作系统来管理的，而不是由编译器管理的。
 * 栈区是程序运行时分配内存的一种方式，它由操作系统提供支持，可以在程序执行期间动态地分配和释放内存。当一个函数被调用时，操作系统会在栈区分配一块内存，
 * 用于存储该函数的
 *
 * 局部变量、函数参数、返回地址等信息。
 *
 * 当函数执行完毕时，操作系统会释放该内存空间，以供其他函数使用。
 * 在C++中，编译器负责生成代码，包括将变量和参数分配到栈区中。但是，栈区的实际管理是由操作系统完成的。操作系统会跟踪栈顶指针的位置，并在需要时向下分配内存空间，以确保栈区中的数据不会相互干扰。
 * 需要注意的是，栈区的大小是有限的，当栈区空间不足时，会发生栈溢出的错误，导致程序异常终止。因此，在编写程序时，需要注意控制函数递归深度、局部变量的生命周期等因素，以避免栈溢出的问题。
 *
 */

int *test(){
    int a = 10;
    return &a;
}

int main(){
    int *p1 = test();
    // 为什么第一次可以打印出来，第二次就不可以了？
    // 因为第一次打印的时候，test()函数中的a变量还没有被释放，所以可以打印出来
    // 但是当第一次打印完之后，test()函数中的a变量就被释放了，所以第二次打印的时候，就会出现问题
    cout << *p1 << endl;
    cout << *p1 << endl;
    return 0;
}